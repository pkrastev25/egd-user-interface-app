apply plugin: 'com.android.application'

// Kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.egd.userinterface"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Components
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'

    // Unit tests
    testImplementation 'junit:junit:4.12'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Enable Android Things
    compileOnly 'com.google.android.things:androidthings:0.5.1-devpreview'

    // Speech to text
    implementation project(':pocketsphinx')

    // MVI
    implementation 'com.hannesdorfmann.mosby3:mvi:3.1.0'

    // RxJava and RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:2.0.7"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.0"

    // RxBinding
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.0.0"
    implementation "com.jakewharton.rxbinding2:rxbinding-design-kotlin:2.0.0"
}

/*
 * Generate binaries for the assets directory of this project
 */
ant.importBuild 'assets.xml'
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)
